{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","console","log","send","HR","react_default","a","createElement","style","borderBottom","MapItem","props","x","self","inColl","arr","pigeon_overlay_lib_react_default","key","anchor","lat","long","inReach","display","justifyContent","onClick","state","collected","findIndex","y","arena_id","setState","concat","getSymbol","alt","src","image_uris","art_crop","width","height","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","zoom","time","strategy","z","_this2","now","Date","getTime","last","_ref","loc","latitude","longitude","data","we","weather","main","weatherIcon","icon","keyArr","key2","it","results","map","name","poi","position","lon","items","filter","_this3","updateSize","w","window","innerWidth","h","innerHeight","scrollTo","addEventListener","navigator","setInterval","tick","registerWatchLocation","_this4","geolocation","watchPosition","coords","heading","speed","firstPos","dist","dx","dy","Math","sqrt","_this5","_this$state","className","lib_react_default","center","locations","i","top","right","info","backgroundColor","padding","alignItems","margin","toLowerCase","href","target","rel","reach","suf","color_identity","toString","length","uw","rw","bu","bg","gr","ru","bw","br","gw","gu","sort","join","color","fontSize","toFixed","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b7a7df4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Map from \"pigeon-maps\"\nimport Overlay from \"pigeon-overlay\"\n\nlet weathermapapi = \"25789a3c7e539e6cf6fb2ae24a3498dc\"\nlet tomtomapi = \"xB0Y7FfKjp2gNTFeA4l7oMm1wWI8YL6G\"\n\nfunction getJSON(url, callback) {\n    let xhr = new XMLHttpRequest()\n    xhr.open('GET', url, true)\n    xhr.responseType = 'json'\n    xhr.onload = function () {\n        // console.log(\"status\", xhr.status)\n        if (xhr.status < 300) {\n            callback(xhr.response)\n        } else {\n            console.log(\"error\", xhr.status, \"body\", xhr.response)\n        }\n    }\n    xhr.send()\n}\n\n\nfunction HR() {\n    return <div style={{borderBottom: \"1px solid black\"}}/>\n}\n\nfunction MapItem(props) {\n    let {x, self, inColl, arr} = props\n    return <Overlay key={props.key} anchor={[x.lat, x.long]}>\n        {self.inReach(arr, x) ? <div\n                style={{display: \"flex\", justifyContent: \"space-between\"}}\n                onClick={() => {\n                    if (self.state.collected.findIndex(y => y.arena_id === x.arena_id) === -1 && self.inReach(arr, x)) {\n                        console.log(\"claim \" + x.arena_id)\n                        self.setState({\n                            collected: self.state.collected.concat([x])\n                        })\n                    }\n                }}>\n                {self.getSymbol(x, arr, inColl, true)}\n                {inColl && <img alt=\"\" src={x.image_uris && x.image_uris.art_crop} width={100} height={100 * (457 / 624)}/>}\n            </div> :\n            self.getSymbol(x, arr, inColl, true)}\n    </Overlay>\n}\n\nfunction mulberry32(a) {\n    return function () {\n        var t = a += 0x6D2B79F5;\n        t = Math.imul(t ^ (t >>> 15), t | 1);\n        t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n        return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            zoom: 17,\n            collected: [],\n            time: 0, // new Date().getTime(),\n            strategy: function (x, y, z) {\n                // \"http://c.tile.stamen.com/toner/\" + z + \"/\" + x + \"/\" + y + \".png\"\n                // \"https://c.basemaps.cartocdn.com/rastertiles/voyager/\" + z + \"/\" + x + \"/\" + y + \".png\"\n                return \"http://b.tile.stamen.com/watercolor/\" + z + \"/\" + x + \"/\" + y + \".jpg\"\n            }\n        }\n    }\n\n    tick() {\n        let now = new Date().getTime()\n        let last = this.state.time\n        if (now - last > 30000) {\n            console.log(\"4 sec passed\")\n            let self = this\n            this.setState({time: now})\n\n            let {latitude, longitude} = this.state.loc || {}\n            if (!latitude) {\n                console.log(\"no current pos\")\n            } else {\n                let url = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + weathermapapi\n\n                getJSON(url, data => {\n                    console.log(\"we\", data)\n                    let we = data.weather ? (data.weather[0] || {}) : {}\n\n                    self.setState({weather: we.main, weatherIcon: we.icon})\n                })\n\n                let keyArr = [\"service\", \"post\", \"park\", \"restaurant\", \"shop\", \"local\"]\n                for (let key2 in keyArr) {\n                    let url2 = \"https://api.tomtom.com/search/2/poiSearch/\" + keyArr[key2] + \".json?key=\" + tomtomapi + \"&lat=\" + latitude + \"&lon=\" + longitude + \"&radius=115000\"\n                    getJSON(url2, data => {\n                            console.log(\"it\", data)\n                            let it = ((data || {}).results || []).map(x => {\n                                return {\n                                    name: (x.poi || {}).name,\n                                    long: x.position.lon,\n                                    lat: x.position.lat\n                                }\n                            })\n                            self.setState({\n                                items:\n                                    (self.state.items || []).filter(x =>\n                                        it.findIndex(y => x.lat === y.lat && x.long === x.long) === -1\n                                    ).concat(it)\n                            })\n                        }\n                    )\n                    // console.log(url2)\n                }\n            }\n        }\n    }\n\n    componentDidMount() {\n        let self = this\n\n        window.scrollTo(0, 1)\n\n        function updateSize() {\n            self.setState({\n                w: window.innerWidth - 3,\n                h: window.innerHeight - 4\n            })\n        }\n\n        updateSize()\n        window.addEventListener(\"resize\", updateSize)\n        window.addEventListener(\"orientationchange\", updateSize)\n\n        if (\"geolocation\" in navigator) {\n            // window.location\n            // let history = window.history\n            // history.replaceState(\" \", \"Guilds Go\", \"http://tinyurl.com/guildsgo\")\n            //document.documentElement.webkitRequestFullscreen()\n\n            setInterval(() => this.tick(), 1000)\n            this.registerWatchLocation()\n        }\n    }\n\n    registerWatchLocation() {\n        navigator.geolocation.watchPosition(x => {\n            this.setState({\n                loc: {\n                    latitude: x.coords.latitude,\n                    longitude: x.coords.longitude,\n                    heading: x.coords.heading,\n                    speed: x.coords.speed\n                }\n            })\n            if (!this.state.firstPos) {\n                console.log(\"firstPos\", x.coords)\n                this.setState({\n                    firstPos: true /*,\n                        locations: grn.data.filter(x => x.eur !== undefined).map(card => {\n                            let rnd = mulberry32(card.arena_id)\n                            return Object.assign({}, card, {\n                                long: x.coords.longitude + rnd() / 50 - 0.004,\n                                lat: x.coords.latitude + rnd() / 50 - 0.004\n                            })\n                        })*/\n                })\n            }\n        })\n    }\n\n    inReach(arr, x) {\n        return this.dist(arr, x) < 0.0014\n    }\n\n    dist(arr, x) {\n        let dx = arr[0] - x.lat\n        let dy = arr[1] - x.long\n        return Math.sqrt(dx * dx + dy * dy)\n    }\n\n    render() {\n        let arr =\n            this.state.loc ?\n                [this.state.loc.latitude, this.state.loc.longitude] :\n                [54.3126, 10.11]\n        let firstPos = this.state.firstPos || arr\n        // let screen = window.screen\n        let {w, h} = this.state\n\n        let zoom = this.state.zoom\n        // limitBounds=\"true\" twoFingerDrag=\"true\" touchEvents=\"false\"  metaWheelZoom=\"false\"\n        return (\n            <div className=\"App\">\n                <Map center={arr} zoom={zoom} width={w} height={h}>\n                    {/*provider={(x, y, z) => {\n                            // console.log(x + \"/\" + y + \"/\" + z)\n                            return this.state.strategy(x, y, z)\n                        }}*/}\n                    <Overlay anchor={arr}>\n                        <div className=\"ripplecontainer\">\n                            <span className=\"circle photo\"></span>\n                            <div className=\"ripplecircle\"></div>\n                        </div>\n                    </Overlay>\n\n                    {(this.state.locations || []).map((x, i) => {\n                        let inColl = this.state.collected.findIndex(y => y.arena_id === x.arena_id) >= 0\n                        return MapItem({key: \"ca\" + i, inColl: inColl, x: x, self: this, arr: arr})\n                    })}\n\n                    {(this.state.items || []).map((x, i) => {\n                        return MapItem({key: \"it\" + i, inColl: false, x: x, self: this, arr: arr})\n                    })}\n                </Map>\n                <div style={{position: \"absolute\", top: 0, right: 0}}>\n                    {/*this.state.selected && <div>\n                        {this.state.selected.name}\n                        <br/>\n                        <img src={this.state.selected.image_uris && this.state.selected.image_uris.art_crop}\n                             width={100}/>\n                        <br/>\n                    </div>*/}\n                    <div onClick={() => !this.state.info && this.setState({info: !this.state.info})}\n                         style={{backgroundColor: \"rgba(255,255,255,0.8)\", padding: 8}}>\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n                            <span className=\"ms ms-multiple\" style={{margin: 10}}/>\n\n                            {/*<span> </span>Info<span> </span>({(this.state.items || []).length})*/}\n                            {(this.state.weather || \"\").toLowerCase()}\n\n                            {this.state.weatherIcon &&\n                            <img src={\"http://openweathermap.org/img/w/\" + this.state.weatherIcon + \".png\"} alt=\"\"\n                                 width=\"50\" height=\"50\" style={{margin: 10}}/>}\n                        </div>\n\n                        {this.state.info &&\n                        <div>\n                            {HR()}\n                            <small>\n                                <a href=\"#\" onClick={() => this.registerWatchLocation()}>\n                                    register location\n                                </a>\n                                <br/>\n                                {/*JSON.stringify(Object.assign({}, this.state, {locations: (this.state.locations || []).length}))*/}\n                                {/*Collected:\n                                <ul>\n                                    {(this.state.items || []).map(x =>\n                                        <li key={\"l\" + x.arena_id}>\n                                            {this.getSymbol(x, arr, true, true)}\n                                        </li>\n                                    )}\n                                </ul>*/}\n                                <br/>\n                                screen: {this.state.w}x{this.state.h}<br/>\n\n                                <span>uses: </span>\n                                <ul>\n                                    <li><a href=\"https://pigeon-maps.js.org\" target=\"_blank\" rel=\" noopener noreferrer\">pigeon\n                                        maps</a></li>\n                                    <li><a href=\"http://maps.stamen.com\" target=\"_blank\"\n                                           rel=\"noopener noreferrer\">stamen-watercolor</a></li>\n\n                                    <li><a href=\"https://developer.tomtom.com/\" target=\"_blank\"\n                                           rel=\"noopener noreferrer\">tomtom\n                                        poi api</a></li>\n                                    <li><a href=\"https://openweathermap.org/\" target=\"_blank\"\n                                           rel=\"noopener noreferrer\">openwathermaps</a></li>\n                                </ul>\n                            </small>\n                            {HR()}\n                            <a href=\"#\" onClick={() => this.state.info && this.setState({info: !this.state.info})}>\n                                close\n                            </a>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    getSymbol(x, arr, inColl, reach) {\n        let guilds = {\n            uw: \"guild-azorius\",\n            rw: \"guild-boros\",\n            bu: \"guild-dimir\",\n            bg: \"guild-golgari\",\n            gr: \"guild-gruul\",\n            ru: \"guild-izzet\",\n            bw: \"guild-orzhov\",\n            br: \"guild-rakdos\",\n            gw: \"guild-selesnya\",\n            gu: \"guild-simic\"\n        }\n        let suf = ((x.color_identity || [])[0] + \"\").toString().toLowerCase()\n        if ((x.color_identity || []).length === 2) {\n            let joined = x.color_identity.sort().join(\"\").toLowerCase()\n            //console.log(x.color_identity, joined, guilds[joined])\n            suf = guilds[joined]\n        }\n        return <span style={{color: inColl ? \"#10A010\" : reach ? \"#000000\" : \"#303030\"}}>\n            <span style={{fontSize: \"160%\"}} className={\"ms ms-\" + suf}/> {reach && x.name}\n            {inColl ? \" ✓\" : <i> {(100000 * this.dist(arr, x)).toFixed(3)}m</i>}\n        </span>\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from \"./serviceWorker\"\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nunregister();\n"],"sourceRoot":""}